<Window x:Class="Walterlv.Whitman.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:themes="clr-namespace:Walterlv.Themes"
        xmlns:effects="clr-namespace:Walterlv.Effects"
        xmlns:shell="clr-namespace:Walterlv.Whitman.Shell"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d" Title="Whitman" Width="1000" Height="640"
        Activated="OnActivated" Deactivated="OnDeactivated"
        Background="Transparent" Padding="-1" Icon="Properties/App.ico"
        Style="{StaticResource Style.Window.Universal}"
        FontFamily="Microsoft YaHei" UseLayoutRounding="True" SnapsToDevicePixels="True"
        shell:WindowBlur.IsEnabled="True">
    <themes:UniversalWindowStyle.TitleBar>
        <themes:UniversalTitleBar ForegroundColor="White" InactiveForegroundColor="#9fd3ed"
                                  ButtonForegroundColor="White" ButtonInactiveForegroundColor="#9fd3ed"
                                  ButtonHoverForeground="White" ButtonHoverBackground="#50afe0"
                                  ButtonPressedForeground="White" ButtonPressedBackground="#145587" />
    </themes:UniversalWindowStyle.TitleBar>
    <themes:UniversalWindowStyle.Window>
        <themes:UniversalWindow FrameColor="Transparent" InactiveFrameColor="Transparent" />
    </themes:UniversalWindowStyle.Window>
    <Window.Resources>
        <Style TargetType="RadioButton">
            <Setter Property="BorderBrush" Value="#C0279EDA" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0 0 0 4" />
            <Setter Property="Padding" Value="16 4" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="#289dd9" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid x:Name="Rt">
                            <Border x:Name="Bd" Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                            </Border>
                            <Border Background="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <TextBlock x:Name="Tb" Opacity="0.33" Text="{TemplateBinding Content}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Tb" Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Bd" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Tb" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Rt" Property="Background" Value="#10279EDA" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="Storyboard.GotoGeneratingPage">
            <DoubleAnimation Storyboard.TargetName="OutputTextBlock" Storyboard.TargetProperty="Opacity" Duration="0:0:2.0" />
            <DoubleAnimation Storyboard.TargetName="SettingPage" Storyboard.TargetProperty="Opacity" Duration="0:0:0.6" />
        </Storyboard>
        <Storyboard x:Key="Storyboard.GotoSettingPage">
            <DoubleAnimation Storyboard.TargetName="OutputTextBlock" Storyboard.TargetProperty="Opacity" Duration="0:0:0.6" To="0" />
            <DoubleAnimation Storyboard.TargetName="SettingPage" Storyboard.TargetProperty="Opacity" Duration="0:0:1.2" To="1" />
        </Storyboard>
    </Window.Resources>
    <Grid x:Name="RootPanel">
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="48" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid x:Name="TitlePanel" Grid.Row="0" Background="#289dd9">
        </Grid>
        <Grid x:Name="ContentPanel" Grid.Row="1" Grid.RowSpan="2" Background="#e0ffffff">
            <Grid x:Name="GeneratingPage">
                <Grid x:Name="EffectPanel" Focusable="True" FocusVisualStyle="{x:Null}" />
                <Viewbox StretchDirection="DownOnly">
                    <TextBlock x:Name="OutputTextBlock" Margin="64" TextAlignment="Center"
                           Text="在文本框中&#xD;按下 Ctrl+, 开始" Foreground="#145587"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           FontWeight="Bold" FontSize="64" />
                </Viewbox>
                <TextBlock x:Name="CopyrightTextBlock" Margin="16 12" TextAlignment="Left" Foreground="#A6BEC7"
                           HorizontalAlignment="Left" VerticalAlignment="Bottom"
                           TextWrapping="WrapWithOverflow"
                           Text="https://blog.walterlv.com/" ToolTip="关于 吕毅"
                           Cursor="Hand"
                           MouseEnter="AboutLink_MouseEnter" MouseLeave="AboutLink_MouseLeave"
                           MouseLeftButtonDown="HandledElement_MouseDown" MouseLeftButtonUp="AboutLink_MouseUp">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextDecorations" Value="Underline" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
            <ScrollViewer x:Name="SettingPage" Margin="0 48 0 0" IsHitTestVisible="False" IsEnabled="False" Opacity="0">
                <ScrollViewer.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 8" />
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Margin" Value="0 -4 0 16" />
                        <Setter Property="Height" Value="32" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="4 0" />
                        <Setter Property="Width" Value="320" />
                    </Style>
                </ScrollViewer.Resources>
                <StackPanel HorizontalAlignment="Center" Margin="200 20 80 0" TextBlock.FontSize="16">
                    <TextBlock FontSize="24" Text="生成数量" />
                    <TextBlock Margin="0 -4 0 8" FontSize="14" Text="每一个标识符由若干个单词组成，每一个单词中又有若干个音节。你可以在这里设置生成的标识符需要包含多少个单词，其中的每一个单词包含多少个音节。" />
                    <TextBlock Text="最少单词数" />
                    <TextBox x:Name="FirstFocusableSettingItem" Text="{Binding MinimalWordCount, Mode=TwoWay}" />
                    <TextBlock Text="最多单词数" />
                    <TextBox Text="{Binding MaximumWordCount, Mode=TwoWay}" />
                    <TextBlock Text="单词最少音节数" />
                    <TextBox Text="{Binding MinimalSyllableCount, Mode=TwoWay}" />
                    <TextBlock Text="单词最多音节数" />
                    <TextBox Text="{Binding MaximumSyllableCount, Mode=TwoWay}" />
                    <TextBlock Text="最少总音节数" />
                    <TextBox Text="{Binding MinimalTotalSyllableCount, Mode=TwoWay}" />
                    <TextBlock Text="最多总音节数" />
                    <TextBox Text="{Binding MaximumTotalSyllableCount, Mode=TwoWay}" />
                    <TextBlock FontSize="24" Text="单词个数权重" />
                    <TextBlock Margin="0 -4 0 8" FontSize="14" Text="生成的单词个数是随机的，因此你需要指定生成不同单词数量时的权重。如果你只希望生成一种单词数量，请将其他权重都设成 0。" />
                    <TextBlock Text="1 个单词" />
                    <TextBox Text="{Binding Word1Weight, Mode=TwoWay}" />
                    <TextBlock Text="2 个单词" />
                    <TextBox Text="{Binding Word2Weight, Mode=TwoWay}" />
                    <TextBlock Text="3 个单词" />
                    <TextBox Text="{Binding Word3Weight, Mode=TwoWay}" />
                    <TextBlock Text="4 个单词" />
                    <TextBox Text="{Binding Word4Weight, Mode=TwoWay}" />
                    <TextBlock Text="5 个单词" />
                    <TextBox Text="{Binding Word5Weight, Mode=TwoWay}" />
                    <TextBlock FontSize="24" Text="单词内音节数权重" />
                    <TextBlock Margin="0 -4 0 8" FontSize="14" Text="每个单词中的音节个数是随机的，因此你需要指定生成音节数量时的权重。如果你只希望生成一种音节个数，请将其他权重都设成 0。" />
                    <TextBlock Text="每单词 1 个音节" />
                    <TextBox Text="{Binding Syllable1Weight, Mode=TwoWay}" />
                    <TextBlock Text="每单词 2 个音节" />
                    <TextBox Text="{Binding Syllable2Weight, Mode=TwoWay}" />
                    <TextBlock Text="每单词 3 个音节" />
                    <TextBox Text="{Binding Syllable3Weight, Mode=TwoWay}" />
                    <TextBlock Text="每单词 4 个音节" />
                    <TextBox Text="{Binding Syllable4Weight, Mode=TwoWay}" />
                    <TextBlock Text="每单词 5 个音节" />
                    <TextBox Text="{Binding Syllable5Weight, Mode=TwoWay}" />
                    <TextBlock Margin="0 32 0 12" FontSize="16" Foreground="#145587" Text="切换到生成标识符的主页面可以保存此页的设置以便下次打开软件时使用。" />
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="1" Grid.RowSpan="2">
        </Grid>
        <Grid x:Name="HeaderPanel" Grid.Row="1">
            <StackPanel Orientation="Horizontal" Margin="12 0" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <Border BorderThickness="1" BorderBrush="{effects:RevealBorderBrush #5cb6e3}">
                    <RadioButton Margin="-1" GroupName="PageSelector" Content="标识符生成器" IsChecked="True" Checked="GeneratingPage_Checked" />
                </Border>
                <Border Margin="-1 0 0 0" BorderThickness="1" BorderBrush="{effects:RevealBorderBrush #5cb6e3}">
                    <RadioButton Margin="-1" GroupName="PageSelector" Content="设置" Checked="SettingPage_Checked" />
                </Border>
            </StackPanel>
            <Border Width="24" Height="24" Margin="11" HorizontalAlignment="Right" VerticalAlignment="Top"
                    CornerRadius="16" BorderThickness="1" Background="Transparent"
                    MouseLeftButtonDown="HandledElement_MouseDown"
                    ToolTip="在任意文本框中按下 Ctrl+Shift+, 输入 PascalCase 规则的标识符&#xD;
在任意文本框中按下 Ctrl+, 输入 camelCase 规则的标识符">
                <TextBlock Text="&#xE897;" FontSize="10" FontFamily="Segoe MDL2 Assets"
                           HorizontalAlignment="Center" VerticalAlignment="Center" />
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="#CCCCCC" />
                        <Setter Property="TextBlock.Foreground" Value="#CCCCCC" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#999999" />
                                <Setter Property="TextBlock.Foreground" Value="#999999" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </Grid>
</Window>
